---
name: Cross-platform Shell Testing

# Fix for line 4 - make trigger syntax more explicit
on:
  push:
    branches: [main]
    tags-ignore: ['*']
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  shell-tests:
    strategy:
      matrix:
        include:
          # Linux targets
          - platform: linux-x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            shell: [bash, zsh, fish, ksh]

          - platform: linux-arm64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            shell: [bash, zsh, fish, ksh]

          # macOS targets
          - platform: macos-x64
            os: macos-latest
            target: x86_64-apple-darwin
            shell: [bash, zsh, fish]

          - platform: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin
            shell: [bash, zsh, fish]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup ARM toolchain (Linux)
        if: matrix.platform == 'linux-arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            libc6-dev-arm64-cross
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=\
            aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Install shell (${{ matrix.shell }})
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get update
            case "${{ matrix.shell }}" in
              bash|zsh|ksh)
                sudo apt-get install -y ${{ matrix.shell }} ;;
              fish)
                sudo apt-get install -y fish ;;
            esac
          else
            case "${{ matrix.shell }}" in
              fish)
                brew install fish ;;
            esac
          fi

      - name: Build
        run: cargo build --target ${{ matrix.target }} --release

      - name: Setup test history
        run: |
          mkdir -p ~/.config ~/.local/share/fish
          cat > ~/.pastrc <<EOF
          [shell]
          shell_type = "${{ matrix.shell }}"
          config_file = "${{ matrix.shell == 'fish' && \
            '.config/fish/config.fish' || '.${matrix.shell}rc' }}"
          EOF

          case "${{ matrix.shell }}" in
            fish)
              echo "- cmd: echo 'test_command_1'
                - cmd: ls -l
                - cmd: git status" > ~/.local/share/fish/fish_history ;;
            ksh)
              echo "echo 'test_command_1'
                ls -l
                git status" > ~/.sh_history ;;
            bash)
              echo "echo 'test_command_1'
                ls -l
                git status" > ~/.bash_history ;;
            zsh)
              echo "echo 'test_command_1'
                ls -l
                git status" > ~/.zsh_history ;;
          esac

      - name: Run tests
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get install -y jq
          else
            brew install jq
          fi

          BIN="./target/${{ matrix.target }}/release/past"

          # Fix for line 126 - broken into multiple lines
          echo "=== Running test suite ==="
          $BIN --brief || (echo "Basic execution failed" && exit 1)
          $BIN --brief | grep -q "Commands:" || \
            (echo "Command count mismatch" && exit 1)
          $BIN -s "test_command" | grep -q "test_command_1" || \
            (echo "Keyword search failed" && exit 1)
          $BIN --json | jq empty || \
            (echo "JSON validation failed" && exit 1)

          echo "Tests passed for ${{ matrix.shell }} on ${{ matrix.platform }}"
