name: Cross-platform Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux targets
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            linker: 
            install_cmd: |
              sudo apt-get update
              sudo apt-get install -y \
                gcc-x86-64-linux-gnu \
                g++-x86-64-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            linker: aarch64-linux-gnu-gcc
            install_cmd: |
              sudo apt-get update
              sudo apt-get install -y \
                gcc-aarch64-linux-gnu \
                g++-aarch64-linux-gnu \
                libc6-dev-arm64-cross
          
          # macOS targets
          - os: macos-latest
            target: x86_64-apple-darwin
            linker:
            install_cmd:
          - os: macos-latest
            target: aarch64-apple-darwin
            linker:
            install_cmd:
      fail-fast: false
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    # Install Rust
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    # Install toolchain if needed (only for Linux cross-compilation)
    - name: Install toolchain
      if: matrix.install_cmd != ''
      run: ${{ matrix.install_cmd }}
    
    # Build with appropriate linker if specified
    - name: Build
      env:
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: ${{ matrix.linker }}
      run: cargo build --target ${{ matrix.target }} --release
