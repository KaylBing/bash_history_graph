---
name: Platform Build Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: linux-x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - platform: linux-arm64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - platform: macos-x64
            os: macos-latest
            target: x86_64-apple-darwin
          - platform: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup ARM toolchain (Linux ARM only)
        if: matrix.platform == 'linux-arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            g++-aarch64-linux-gnu \
            libc6-dev-arm64-cross \
            binutils-aarch64-linux-gnu
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CC_aarch64-unknown-linux-gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX_aarch64-unknown-linux-gnu=aarch64-linux-gnu-g++" >> $GITHUB_ENV

      - name: Build release binary
        run: cargo build --target ${{ matrix.target }} --release

      - name: Verify binary exists
        run: |
          if [ ! -f "./target/${{ matrix.target }}/release/past" ]; then
            echo "Binary not found!"
            exit 1
          fi
